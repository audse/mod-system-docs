"use strict";(self.webpackChunkmod_system_docs=self.webpackChunkmod_system_docs||[]).push([[118],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,s(s({ref:t},p),{},{components:n})):a.createElement(k,s({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},s="ModInstanceScript",i={unversionedId:"api/resources/mod-instance-script/index",id:"api/resources/mod-instance-script/index",title:"ModInstanceScript",description:"A script associated with a mod instance",source:"@site/docs/api/resources/mod-instance-script/index.md",sourceDirName:"api/resources/mod-instance-script",slug:"/api/resources/mod-instance-script/",permalink:"/mod-system-docs/docs/api/resources/mod-instance-script/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ModAsset",permalink:"/mod-system-docs/docs/api/resources/mod-asset"},next:{title:"ButtonBase",permalink:"/mod-system-docs/docs/api/resources/mod-instance-script/button-base"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Signals",id:"signals",level:2},{value:"Constants",id:"constants",level:2},{value:"ButtonBase",id:"buttonbase",level:3},{value:"ControlBase",id:"controlbase",level:3},{value:"NodeBase",id:"nodebase",level:3},{value:"ObjectBase",id:"objectbase",level:3},{value:"ResourceBase",id:"resourcebase",level:3},{value:"Properties",id:"properties",level:2},{value:"instance",id:"instance",level:3},{value:"Methods",id:"methods",level:2},{value:"_init",id:"_init",level:3},{value:"logs",id:"logs",level:3},{value:"_on_granted",id:"_on_granted",level:3},{value:"_on_revoked",id:"_on_revoked",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"modinstancescript"},"ModInstanceScript"),(0,r.kt)("h3",null,"A script associated with a mod instance"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/audse/mod-system/tree/main/addons/mod_system/resources/mod_instance_script.gd"},"See the code at ",(0,r.kt)("inlineCode",{parentName:"a"},"mod_instance_script.gd")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Inherits ",(0,r.kt)("inlineCode",{parentName:"strong"},"Resource"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ModInstanceScript")," is a script associated with a mod instance in the Mod System. It contains various virtual methods that can be overridden to customize the behavior of the mod when granted to an owner object."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"signals"},"Signals"),(0,r.kt)("p",null,"None"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"constants"},"Constants"),(0,r.kt)("h3",{id:"buttonbase"},"ButtonBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},'const ButtonBase = preload("mod_instance_script/button.gd")\n')),(0,r.kt)("p",null,"A subclass that contains virtual functions specific to ",(0,r.kt)("inlineCode",{parentName:"p"},"Button"),". Extend ",(0,r.kt)("inlineCode",{parentName:"p"},"ModInstanceScript.ButtonBase")," when creating a script for a mod that will be granted to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Button"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"controlbase"},"ControlBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},'const ControlBase = preload("mod_instance_script/control.gd")\n')),(0,r.kt)("p",null,"A subclass that contains virtual functions specific to ",(0,r.kt)("inlineCode",{parentName:"p"},"Control"),". Extend ",(0,r.kt)("inlineCode",{parentName:"p"},"ModInstanceScript.ControlBase")," when creating a script for a mod that will be granted to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Control"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"nodebase"},"NodeBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},'const NodeBase = preload("mod_instance_script/node.gd")\n')),(0,r.kt)("p",null,"A subclass that contains virtual functions specific to ",(0,r.kt)("inlineCode",{parentName:"p"},"Node"),". Extend ",(0,r.kt)("inlineCode",{parentName:"p"},"ModInstanceScript.NodeBase")," when creating a script for a mod that will be granted to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Node"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"objectbase"},"ObjectBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},'const ObjectBase = preload("mod_instance_script/object.gd")\n')),(0,r.kt)("p",null,"A subclass that contains virtual functions specific to ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),". Extend ",(0,r.kt)("inlineCode",{parentName:"p"},"ModInstanceScript.ObjectBase")," when creating a script for a mod that will be granted to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"resourcebase"},"ResourceBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},'const ResourceBase = preload("mod_instance_script/resource.gd")\n')),(0,r.kt)("p",null,"A subclass that contains virtual functions specific to ",(0,r.kt)("inlineCode",{parentName:"p"},"Resource"),". Extend ",(0,r.kt)("inlineCode",{parentName:"p"},"ModInstanceScript.ResourceBase")," when creating a script for a mod that will be granted to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Resource"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"instance"},"instance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},"var instance: ModInstance\n")),(0,r.kt)("p",null,"The mod instance associated with this script."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/resources/mod-instance"},(0,r.kt)("inlineCode",{parentName:"a"},"ModInstance"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"_init"},"_init"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},"func _init(instance_value: ModInstance) -> void\n")),(0,r.kt)("p",null,"Initializes the script with the associated mod instance."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"instance_value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/resources/mod-instance"},(0,r.kt)("inlineCode",{parentName:"a"},"ModInstance"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The mod instance associated with this script.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"logs"},"logs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},"func logs(message: String) -> void\n")),(0,r.kt)("p",null,"Prints the specified message to the terminal if logging is enabled (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/resources/mod-settings#enable_logging"},(0,r.kt)("inlineCode",{parentName:"a"},"ModSettings/enable_logging")),"). This method can be used to log messages with contextual information about the current mod instance. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The message to log.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_on_granted"},"_on_granted"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},"func _on_granted() -> void\n")),(0,r.kt)("p",null,"Called when the mod is granted to the owner object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),": This method is a virtual method that can be overridden in subclasses to perform custom actions when the mod is revoked."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_on_revoked"},"_on_revoked"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gdscript"},"func _on_revoked() -> void\n")),(0,r.kt)("p",null,"Called when the mod is revoked from the owner object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),": This method is a virtual method that can be overridden in subclasses to perform custom actions when the mod is revoked."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")))}u.isMDXComponent=!0}}]);
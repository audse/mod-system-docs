"use strict";(self.webpackChunkmod_system_docs=self.webpackChunkmod_system_docs||[]).push([[1972],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>g});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=d(a),u=i,g=p["".concat(s,".").concat(u)]||p[u]||c[u]||o;return a?n.createElement(g,r(r({ref:t},m),{},{components:a})):n.createElement(g,r({ref:t},m))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9996:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=a(7462),i=(a(7294),a(3905));const o={},r="ModSettings",l={unversionedId:"api/resources/mod_settings",id:"api/resources/mod_settings",title:"ModSettings",description:"The ModSettings class is a resource that stores a user's preferences for their installed mods. It provides options for enabling or disabling mods, controlling cheat mod behavior, managing enabled mods, and handling logging settings.",source:"@site/docs/api/resources/mod_settings.md",sourceDirName:"api/resources",slug:"/api/resources/mod_settings",permalink:"/docs/api/resources/mod_settings",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ModScript",permalink:"/docs/api/resources/mod_script"},next:{title:"RegisteredClass",permalink:"/docs/api/resources/registered-class"}},s={},d=[{value:"Properties",id:"properties",level:2},{value:"are_mods_enabled: bool",id:"are_mods_enabled-bool",level:3},{value:"are_cheats_enabled: bool",id:"are_cheats_enabled-bool",level:3},{value:"enabled_mods: ArrayString",id:"enabled_mods-arraystring",level:3},{value:"enable_logging: bool",id:"enable_logging-bool",level:3},{value:"save_path: String (static)",id:"save_path-string-static",level:3},{value:"Methods",id:"methods",level:2},{value:"is_enabled(mod: Mod) -&gt; bool",id:"is_enabledmod-mod---bool",level:3},{value:"can_enable(mod: Mod) -&gt; bool",id:"can_enablemod-mod---bool",level:3},{value:"can_disable(mod: Mod) -&gt; bool",id:"can_disablemod-mod---bool",level:3},{value:"enable_mod(mod: Mod) -&gt; void",id:"enable_modmod-mod---void",level:3},{value:"disable_mod(mod: Mod) -&gt; void",id:"disable_modmod-mod---void",level:3},{value:"save() -&gt; void",id:"save---void",level:3},{value:"static load_settings() -&gt; ModSettings",id:"static-load_settings---modsettings",level:3}],m={toc:d},p="wrapper";function c(e){let{components:t,...a}=e;return(0,i.kt)(p,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"modsettings"},"ModSettings"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ModSettings")," class is a resource that stores a user's preferences for their installed mods. It provides options for enabling or disabling mods, controlling cheat mod behavior, managing enabled mods, and handling logging settings."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"are_mods_enabled-bool"},"are_mods_enabled: bool"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Determines whether mods are enabled to affect the game. If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", any mod can be enabled and have an effect. If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),", all mod effects will be blocked from being enabled and granted."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type"),": bool"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Export"),": Yes")),(0,i.kt)("h3",{id:"are_cheats_enabled-bool"},"are_cheats_enabled: bool"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Determines whether cheat mods can be enabled to affect the game. This property is only applicable when ",(0,i.kt)("inlineCode",{parentName:"li"},"are_mods_enabled")," is also ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),". If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", cheat mods can be enabled and granted. If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),", all cheat mods will be blocked from being enabled and granted."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type"),": bool"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Export"),": Yes")),(0,i.kt)("h3",{id:"enabled_mods-arraystring"},"enabled_mods: Array","[String]"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": An array of currently enabled mods. Each element is a string representing the identifier of a mod. The identifier is obtained using the ",(0,i.kt)("inlineCode",{parentName:"li"},"Mod.get_identifier()")," method."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type"),": Array","[String]"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Export"),": Yes")),(0,i.kt)("h3",{id:"enable_logging-bool"},"enable_logging: bool"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Determines whether mods are allowed to print messages to the console with contextual information. This property is useful for debugging purposes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type"),": bool"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Export"),": Yes")),(0,i.kt)("h3",{id:"save_path-string-static"},"save_path: String (static)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": The path where this resource will be saved. The value is obtained from the ",(0,i.kt)("inlineCode",{parentName:"li"},"ProjectSettings.mod_system/mod_settings_save_path")," property."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Type"),": String"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Getter"),": ModSystemUtils.get_setting(ModSystemUtils.Settings.ModSettingsSavePath)")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"is_enabledmod-mod---bool"},"is_enabled(mod: Mod) -> bool"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Returns ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," if the specified mod is enabled (included in the ",(0,i.kt)("inlineCode",{parentName:"li"},"enabled_mods")," array)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod")," (Mod): The mod to check."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Returns"),": bool")),(0,i.kt)("h3",{id:"can_enablemod-mod---bool"},"can_enable(mod: Mod) -> bool"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Returns ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," if the specified mod can be enabled. This depends on the current state of ",(0,i.kt)("inlineCode",{parentName:"li"},"are_mods_enabled"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"enabled_mods"),", and the mod's cheat status (",(0,i.kt)("inlineCode",{parentName:"li"},"is_cheat"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod")," (Mod): The mod to check."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Returns"),": bool")),(0,i.kt)("h3",{id:"can_disablemod-mod---bool"},"can_disable(mod: Mod) -> bool"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Returns ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," if the specified mod can be disabled. This depends on whether the mod is currently enabled (included in the ",(0,i.kt)("inlineCode",{parentName:"li"},"enabled_mods")," array)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod")," (Mod): The mod to check."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Returns"),": bool")),(0,i.kt)("h3",{id:"enable_modmod-mod---void"},"enable_mod(mod: Mod) -> void"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Enables the specified mod and saves the settings."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod")," (Mod): The mod to enable.")))),(0,i.kt)("h3",{id:"disable_modmod-mod---void"},"disable_mod(mod: Mod) -> void"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Disables the specified mod and saves the settings."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mod")," (Mod): The mod to disable.")))),(0,i.kt)("h3",{id:"save---void"},"save() -> void"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Description"),": Saves the ",(0,i.kt)("inlineCode",{parentName:"p"},"ModSettings")," resource to the designated save path (",(0,i.kt)("inlineCode",{parentName:"p"},"save_path"),"). This method is automatically called when any property is changed. It uses ",(0,i.kt)("inlineCode",{parentName:"p"},"ResourceSaver.save()")," to save the resource.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Note"),": This method"),(0,i.kt)("p",{parentName:"li"},'emits the "changed" signal to indicate that the settings have been saved.'))),(0,i.kt)("h3",{id:"static-load_settings---modsettings"},"static load_settings() -> ModSettings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Description"),": Loads the ",(0,i.kt)("inlineCode",{parentName:"li"},"ModSettings")," resource if it exists at the designated save path (",(0,i.kt)("inlineCode",{parentName:"li"},"save_path"),"). If the resource does not exist, a new ",(0,i.kt)("inlineCode",{parentName:"li"},"ModSettings")," object is created."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Returns"),": ModSettings"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Note"),": This is a static method that can be called directly on the ",(0,i.kt)("inlineCode",{parentName:"li"},"ModSettings")," class.")))}c.isMDXComponent=!0}}]);